# ====================================================================
# Watchdog Discord - Complete Production Configuration
# ====================================================================
# This file contains all available environment variables with 
# production-ready values and detailed explanations.

# ====================================================================
# CORE CONFIGURATION
# ====================================================================

# Master switch to enable/disable all Discord notifications
WATCHDOG_DISCORD_ENABLED=true

# Discord webhook URL (required when enabled)
# Get this from: Discord Server Settings > Integrations > Webhooks
WATCHDOG_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN

# Bot appearance in Discord
WATCHDOG_DISCORD_USERNAME="Laravel Watchdog"
# WATCHDOG_DISCORD_AVATAR_URL=https://example.com/bot-avatar.png

# ====================================================================
# PERFORMANCE CONFIGURATION (CRITICAL FOR PRODUCTION)
# ====================================================================

# Enable async processing (ESSENTIAL for production performance)
# This prevents Discord notifications from blocking your application
WATCHDOG_DISCORD_ASYNC_ENABLED=true

# Queue configuration for async processing
WATCHDOG_DISCORD_QUEUE_CONNECTION=redis
WATCHDOG_DISCORD_QUEUE_NAME=watchdog_notifications

# Maximum execution time for synchronous operations (seconds)
# Prevents blocking if async processing is disabled
WATCHDOG_DISCORD_MAX_EXECUTION_TIME=2

# Database timeout to prevent application blocking (seconds)
WATCHDOG_DISCORD_DB_TIMEOUT=1

# ====================================================================
# REDIS CONFIGURATION (HIGH PERFORMANCE)
# ====================================================================

# Redis connection for caching and error tracking
WATCHDOG_DISCORD_REDIS_CONNECTION=default

# Cache prefix to avoid conflicts with other applications
WATCHDOG_DISCORD_CACHE_PREFIX=watchdog_prod

# Cache TTL for error counting (seconds)
WATCHDOG_DISCORD_CACHE_TTL=300

# ====================================================================
# ERROR TRACKING & ANALYTICS
# ====================================================================

# Enable intelligent error tracking and deduplication
WATCHDOG_DISCORD_ERROR_TRACKING_ENABLED=true

# Minimum severity score to trigger immediate notifications (1-10)
# 7+ recommended for production to avoid spam
WATCHDOG_DISCORD_MIN_SEVERITY=7

# Total occurrence threshold to trigger notification for lower-severity errors
WATCHDOG_DISCORD_FREQUENCY_THRESHOLD=10

# Hourly occurrence threshold to trigger notification
WATCHDOG_DISCORD_HOURLY_THRESHOLD=5

# Cooldown between notifications for the same error (minutes)
WATCHDOG_DISCORD_NOTIFICATION_COOLDOWN=60

# ====================================================================
# RATE LIMITING (SPAM PROTECTION)
# ====================================================================

# Enable rate limiting to prevent notification spam
WATCHDOG_DISCORD_RATE_LIMIT_ENABLED=true

# Maximum notifications per time window
WATCHDOG_DISCORD_RATE_LIMIT_MAX=20

# Rate limiting time window (minutes)
WATCHDOG_DISCORD_RATE_LIMIT_WINDOW=5

# ====================================================================
# ENVIRONMENT & FILTERING
# ====================================================================

# Only send notifications from these environments (comma-separated)
# Leave empty to allow all environments
WATCHDOG_DISCORD_ENVIRONMENTS=production,staging

# Language for notification messages
# Supported: en, pt-BR, es, fr, zh-CN, de, ja, it, ru
WATCHDOG_DISCORD_LOCALE=en

# ====================================================================
# NOTIFICATION TARGETING
# ====================================================================

# Discord user IDs to mention on errors (comma-separated)
# Get IDs by: Enable Developer Mode > Right-click user > Copy User ID
# WATCHDOG_DISCORD_MENTION_USERS=123456789012345678,987654321098765432

# Discord role IDs to mention on errors (comma-separated)
# Get IDs by: Enable Developer Mode > Right-click role > Copy Role ID
# WATCHDOG_DISCORD_MENTION_ROLES=123456789012345679

# ====================================================================
# ERROR REPORTING LEVELS
# ====================================================================

# Which error types should trigger notifications
WATCHDOG_DISCORD_REPORT_FATAL=true
WATCHDOG_DISCORD_REPORT_WARNING=false
WATCHDOG_DISCORD_REPORT_NOTICE=false

# ====================================================================
# MESSAGE FORMATTING
# ====================================================================

# Include stack traces in notifications (recommended: false for production)
WATCHDOG_DISCORD_INCLUDE_STACK_TRACE=false

# Maximum stack trace lines to include
WATCHDOG_DISCORD_MAX_STACK_TRACE_LINES=10

# Include HTTP request data in notifications
WATCHDOG_DISCORD_INCLUDE_REQUEST_DATA=true

# Maximum field length (Discord limit is 1024 characters)
WATCHDOG_DISCORD_MAX_FIELD_LENGTH=1024

# ====================================================================
# REQUEST MONITORING
# ====================================================================

# Enable automatic request logging via middleware
WATCHDOG_DISCORD_LOG_REQUESTS=false

# Only log requests with these status codes (comma-separated)
# WATCHDOG_DISCORD_LOG_STATUS_CODES=500,502,503,504

# Only log requests slower than this (milliseconds)
WATCHDOG_DISCORD_MIN_DURATION=2000

# ====================================================================
# DATABASE CONFIGURATION
# ====================================================================

# Use dedicated database connection for error tracking (optional)
# WATCHDOG_DISCORD_DB_CONNECTION=watchdog

# Dedicated database connection settings (if using separate DB)
# DB_HOST_WATCHDOG=error-tracking-db.example.com
# DB_PORT_WATCHDOG=3306
# DB_DATABASE_WATCHDOG=error_tracking
# DB_USERNAME_WATCHDOG=watchdog_user
# DB_PASSWORD_WATCHDOG=secure_password

# ====================================================================
# HTTP CONFIGURATION
# ====================================================================

# HTTP timeout for Discord API requests (seconds)
WATCHDOG_DISCORD_TIMEOUT=30

# ====================================================================
# DEBUG & DEVELOPMENT
# ====================================================================

# Enable debug mode for troubleshooting (development only)
# WATCHDOG_DISCORD_DEBUG=false

# ====================================================================
# ADVANCED CONFIGURATION
# ====================================================================

# Error sampling rate for extremely high-traffic applications (0.0-1.0)
# 0.1 = process only 10% of errors to reduce load
# WATCHDOG_DISCORD_SAMPLING_RATE=1.0

# Enable error sampling
# WATCHDOG_DISCORD_SAMPLING_ENABLED=false

# Queue delay for notifications (seconds)
# WATCHDOG_DISCORD_QUEUE_DELAY=0

# ====================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ====================================================================

# DEVELOPMENT ENVIRONMENT
# ------------------------
# WATCHDOG_DISCORD_ENABLED=true
# WATCHDOG_DISCORD_ASYNC_ENABLED=false
# WATCHDOG_DISCORD_QUEUE_CONNECTION=sync
# WATCHDOG_DISCORD_MIN_SEVERITY=1
# WATCHDOG_DISCORD_INCLUDE_STACK_TRACE=true
# WATCHDOG_DISCORD_RATE_LIMIT_ENABLED=false

# STAGING ENVIRONMENT
# -------------------
# WATCHDOG_DISCORD_ENABLED=true
# WATCHDOG_DISCORD_ASYNC_ENABLED=true
# WATCHDOG_DISCORD_MIN_SEVERITY=6
# WATCHDOG_DISCORD_ENVIRONMENTS=staging
# WATCHDOG_DISCORD_RATE_LIMIT_MAX=30

# PRODUCTION ENVIRONMENT
# ----------------------
# WATCHDOG_DISCORD_ENABLED=true
# WATCHDOG_DISCORD_ASYNC_ENABLED=true
# WATCHDOG_DISCORD_QUEUE_CONNECTION=redis
# WATCHDOG_DISCORD_MIN_SEVERITY=7
# WATCHDOG_DISCORD_ENVIRONMENTS=production
# WATCHDOG_DISCORD_RATE_LIMIT_ENABLED=true
# WATCHDOG_DISCORD_INCLUDE_STACK_TRACE=false

# ====================================================================
# PERFORMANCE MONITORING
# ====================================================================

# For monitoring and alerting, consider these metrics:
# - Queue depth: php artisan queue:monitor redis:watchdog_notifications
# - Redis memory: redis-cli info memory
# - Database performance: Check slow query logs
# - Error frequency: Monitor notification frequency
# - Application impact: Measure response times before/after enabling

# ====================================================================
# SECURITY NOTES
# ====================================================================

# - Keep your Discord webhook URL secure and private
# - Use environment filtering to prevent accidental notifications
# - Consider using dedicated database credentials with limited permissions
# - Regularly rotate webhook URLs if compromised
# - Monitor for unusual error patterns that might indicate attacks

# ====================================================================
# TROUBLESHOOTING
# ====================================================================

# Test your configuration:
# php artisan watchdog-discord:test --exception
# php artisan watchdog-discord:test --level=error --message="Production test"

# Check configuration:
# php artisan config:show watchdog-discord

# Monitor queues:
# php artisan queue:work redis --queue=watchdog_notifications
# php artisan queue:monitor redis:watchdog_notifications

# Clear caches if configuration changes don't take effect:
# php artisan config:clear
# php artisan cache:clear
